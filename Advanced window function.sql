USE swiggy;

-- LIST THE TOP 5 CUISINES AS PER THE REVENUE GENERATED BY TOP 5 RESTAURANTS OF EVERY CUISINE

SELECT cuisine, rating_count*cost AS "revenue", t.rank
FROM (SELECT *,cost*rating_count,ROW_NUMBER() OVER(PARTITION BY cuisine ORDER BY cost*rating_count DESC) AS "rank" FROM restaurants) t WHERE t.rank<6;


SELECT *, cuisine, rating_count*cost AS "revenue", t.rank
FROM (SELECT *,cost*rating_count,ROW_NUMBER() OVER(PARTITION BY cuisine ORDER BY cost*rating_count DESC) AS "rank" FROM restaurants) t WHERE t.rank<6;


-- WHAT % OF THE TOTAL REVENUE IS GENERATED BY TOP 1% restaurants

SELECT cuisine, SUM(rating_count*cost) AS "revenue", t.rank
FROM (SELECT *,cost*rating_count,ROW_NUMBER() OVER(PARTITION BY cuisine ORDER BY cost*rating_count DESC) AS "rank" FROM restaurants) t WHERE t.rank<6 GROUP BY cuisine ORDER BY revenue DESC ;


-- WHAT % OF THE TOTAL REVENUE IS GENERATED BY TOP 1% restaurants

SELECT SUM(cost*rating_count) as "revenue" FROM
(SELECT *,cost*rating_count,ROW_NUMBER() OVER(ORDER BY cost*rating_count DESC) AS "rank"
FROM restaurants) t WHERE t.rank<=((SELECT count(*) from restaurants)/100);

-- CHECK THE SAME FOR TOP 20% RESTAURANTS

SELECT SUM(cost*rating_count) as "revenue" FROM
(SELECT *,cost*rating_count,ROW_NUMBER() OVER(ORDER BY cost*rating_count DESC) AS "rank"
FROM restaurants) t WHERE t.rank<=((SELECT count(*) from restaurants));

-- WHAT % OF REVENUE IS GENERATED BY TOP 20% OF RESTAURANTS WITH RESPECT TO TOTAL REVENUE
WITH 
 q1 AS (SELECT SUM(cost*rating_count) as "top_revenue" FROM
(SELECT *,cost*rating_count,ROW_NUMBER() OVER(ORDER BY cost*rating_count DESC) AS "rank"
FROM restaurants) t WHERE t.rank<=((SELECT count(*) from restaurants))),
q2 AS (SELECT SUM(cost*rating_count) AS "total_revenue" FROM restaurants)
SELECT top_revenue/total_revenue AS "revenue %" FROM q1,q2;